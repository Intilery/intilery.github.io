"use strict";(self.webpackChunkintilery=self.webpackChunkintilery||[]).push([[349],{2526:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"app/ios-quickstart","title":"Quickstart iOS","description":"This tutorial gets you started sending data from your iOS app to Intilery.","source":"@site/docs/app/ios-quick.md","sourceDirName":"app","slug":"/app/ios-quickstart","permalink":"/docs/app/ios-quickstart","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"ios-quickstart","title":"Quickstart iOS","sidebar_label":"iOS Quickstart tutorial"},"sidebar":"app","previous":{"title":"iOS Mobile SDK","permalink":"/docs/app/ios"},"next":{"title":"iOS 14 Guide","permalink":"/docs/app/ios14"}}');var s=t(4848),a=t(8453);const c={id:"ios-quickstart",title:"Quickstart iOS",sidebar_label:"iOS Quickstart tutorial"},r=void 0,l={},o=[{value:"Before you begin",id:"before-you-begin",level:2},{value:"Client Key(s)",id:"client-keys",level:2},{value:"Step 1: Install the SDK",id:"step-1-install-the-sdk",level:2},{value:"Switft",id:"switft",level:4},{value:"Objective-C",id:"objective-c",level:4},{value:"Swift",id:"swift",level:4},{value:"Objective-C",id:"objective-c-1",level:4},{value:"Step 3: Identify Users",id:"step-3-identify-users",level:2},{value:"Swift",id:"swift-1",level:4},{value:"Objective-C",id:"objective-c-2",level:4},{value:"Step 4: Track Actions",id:"step-4-track-actions",level:2},{value:"Swift",id:"swift-2",level:4},{value:"Objective-C",id:"objective-c-3",level:4},{value:"Swift",id:"swift-3",level:4},{value:"Objective-C",id:"objective-c-4",level:4},{value:"Swift",id:"swift-4",level:4},{value:"Objective-C",id:"objective-c-5",level:4},{value:"Step 5: Flushing",id:"step-5-flushing",level:2},{value:"Swift",id:"swift-5",level:4},{value:"Objective-C",id:"objective-c-6",level:4},{value:"Swift",id:"swift-6",level:4},{value:"Objective-C",id:"objective-c-7",level:4},{value:"What\u2019s Next?",id:"whats-next",level:2}];function d(e){const i={a:"a",code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.p,{children:"This tutorial gets you started sending data from your iOS app to Intilery."}),"\n",(0,s.jsxs)(i.p,{children:["If you want to dive deeper at any point, check out the ",(0,s.jsx)(i.a,{href:"./ios",children:"iOS Library Reference"}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"before-you-begin",children:"Before you begin"}),"\n",(0,s.jsx)(i.h2,{id:"client-keys",children:"Client Key(s)"}),"\n",(0,s.jsx)(i.p,{children:"Client Key(s) are unique to each Client and Account, the client key for your account(s) are included in the tag snippet within the application. in the tag section."}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": YOUR_WRITE_KEY canbe found in the JavaScript tag in the ",(0,s.jsx)(i.code,{children:"annalytics.load('YOUR_WRITE_KEY')"})," line"]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note:"})," If you have multiple accounts with Intilery, each tag has a seperate client key, obtain the tag snippet for each account by switching between accounts when you log in to Intilery."]}),"\n",(0,s.jsx)(i.h2,{id:"step-1-install-the-sdk",children:"Step 1: Install the SDK"}),"\n",(0,s.jsxs)(i.p,{children:["The recommended way to install Analytics for iOS is using ",(0,s.jsx)(i.a,{href:"http://cocoapods.org/",children:"Cocoapods"}),", since it means you can create a build with specific bundled destinations, and because it makes it simple to install and upgrade."]}),"\n",(0,s.jsxs)(i.p,{children:["First, add the ",(0,s.jsx)(i.code,{children:"Analytics"})," dependency to your ",(0,s.jsx)(i.code,{children:"Podfile"})," by adding the following line:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"pod 'IntileryAnalytics', '~> 1.0'\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Then in your application delegate\u2019s ",(0,s.jsx)(i.code,{children:"- application:didFinishLaunchingWithOptions:"})," method, set up the SDK like so:"]}),"\n",(0,s.jsx)(i.h4,{id:"switft",children:"Switft"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:'let configuration = AnalyticsConfiguration(writeKey: "YOUR_WRITE_KEY")\nconfiguration.trackApplicationLifecycleEvents = true // Enable this to record certain application events automatically!\nconfiguration.recordScreenViews = true // Enable this to record screen views automatically!\nAnalytics.setup(with: configuration)\n'})}),"\n",(0,s.jsx)(i.h4,{id:"objective-c",children:"Objective-C"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objective-c",children:'SEGAnalyticsConfiguration *configuration = [SEGAnalyticsConfiguration configurationWithWriteKey:@"YOUR_WRITE_KEY"];\nconfiguration.trackApplicationLifecycleEvents = YES; // Enable this to record certain application events automatically!\nconfiguration.recordScreenViews = YES; // Enable this to record screen views automatically!\n[SEGAnalytics setupWithConfiguration:configuration];\n'})}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Tip"}),": You don\u2019t need to use initialization config parameters to track lifecycle events (",(0,s.jsx)(i.code,{children:"Application Opened"}),", ",(0,s.jsx)(i.code,{children:"Application Installed"}),", ",(0,s.jsx)(i.code,{children:"Application Updated"}),") and screen views automatically, but we highly recommend that you do so you can start off already tracking some important core events. See [the track call info](#Step 4: Track Actions) for more info."]}),"\n",(0,s.jsx)(i.p,{children:"Import the SDK in the files that you use it by adding the following line:"}),"\n",(0,s.jsx)(i.h4,{id:"swift",children:"Swift"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:"import Segment\n"})}),"\n",(0,s.jsx)(i.h4,{id:"objective-c-1",children:"Objective-C"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objective-c",children:"#import <Analytics/SEGAnalytics.h>\n"})}),"\n",(0,s.jsx)(i.h2,{id:"step-3-identify-users",children:"Step 3: Identify Users"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Good to know"}),": For any of the different methods described in this quickstart, you can replace the properties and traits in the code samples with variables that represent the data collected."]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"identify"})," method informs Intilery who the current user is. It takes a unique User ID, and any optional traits you know about them. You can read more about it in the ",(0,s.jsx)(i.a,{href:"./ios#identify",children:"identify reference"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["Here\u2019s what a basic call to ",(0,s.jsx)(i.code,{children:"identify"})," might look like:"]}),"\n",(0,s.jsx)(i.h4,{id:"swift-1",children:"Swift"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:'Analytics.shared().identify("f4ca124298", traits: ["name": "Michael Smith", "email": "msmith@example.com"])\n'})}),"\n",(0,s.jsx)(i.h4,{id:"objective-c-2",children:"Objective-C"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objective-c",children:'[[SEGAnalytics sharedAnalytics] identify:@"f4ca124298"\n                                    traits:@{ @"name": @"Michael Brown",\n                                    @"email": @"mbrown@example.com" }];\n'})}),"\n",(0,s.jsxs)(i.p,{children:["That call identifies Michael by his unique User ID (",(0,s.jsx)(i.code,{children:"f4ca124298"}),", which is the one you know him by in your database) and labels him with ",(0,s.jsx)(i.code,{children:"name"})," and ",(0,s.jsx)(i.code,{children:"email"})," traits."]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Hold up though!"})," When you put that code in your iOS app, you need to replace those hard-coded trait values with the variables that represent the details of the currently logged-in user."]}),"\n",(0,s.jsxs)(i.p,{children:["Once you\u2019ve added an ",(0,s.jsx)(i.code,{children:"identify"})," call, you\u2019re ready to move on to tracking!"]}),"\n",(0,s.jsx)(i.h2,{id:"step-4-track-actions",children:"Step 4: Track Actions"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"track"})," method is tells Intilery about the actions your users perform in your app. Every action triggers an \u201cevent\u201d, which can also have associated properties. You can read more about ",(0,s.jsx)(i.code,{children:"track"})," in the ",(0,s.jsx)(i.a,{href:"./ios#track",children:"track method"})," reference."]}),"\n",(0,s.jsxs)(i.p,{children:["To get started, the Intilery iOS SDK can automatically track a few important common events, such as ",(0,s.jsx)(i.strong,{children:"Application Installed"}),", ",(0,s.jsx)(i.strong,{children:"Application Updated"})," and ",(0,s.jsx)(i.strong,{children:"Application Opened"}),". You can enable this option during initialization by adding the following lines."]}),"\n",(0,s.jsx)(i.h4,{id:"swift-2",children:"Swift"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:'AnalyticsConfiguration configuration = AnalyticsConfiguration(writeKey:"YOUR_WRITE_KEY")\nconfiguration.trackApplicationLifecycleEvents = true\nAnalytics.setup(with: configuration)\n'})}),"\n",(0,s.jsx)(i.h4,{id:"objective-c-3",children:"Objective-C"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objective-c",children:'SEGAnalyticsConfiguration *configuration = [SEGAnalyticsConfiguration configurationWithWriteKey:@"YOUR_WRITE_KEY"];\nconfiguration.trackApplicationLifecycleEvents = YES;\n[SEGAnalytics setupWithConfiguration:configuration];\n'})}),"\n",(0,s.jsxs)(i.p,{children:["You should also track events that indicate success in your mobile app, like ",(0,s.jsx)(i.strong,{children:"Signed Up"}),", ",(0,s.jsx)(i.strong,{children:"Item Purchased"})," or ",(0,s.jsx)(i.strong,{children:"Article Bookmarked"}),". We recommend tracking just a few important events. You can always add more later!"]}),"\n",(0,s.jsxs)(i.p,{children:["Here\u2019s what a ",(0,s.jsx)(i.code,{children:"track"})," call might look like when a user signs up:"]}),"\n",(0,s.jsx)(i.h4,{id:"swift-3",children:"Swift"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:'Analytics.shared().track("Signed Up", properties: ["plan": "Enterprise"])\n'})}),"\n",(0,s.jsx)(i.h4,{id:"objective-c-4",children:"Objective-C"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objective-c",children:'[[SEGAnalytics sharedAnalytics] track:@"Signed Up"\n                            properties:@{ @"plan": @"Enterprise" }];\n'})}),"\n",(0,s.jsxs)(i.p,{children:["That tells us that your user triggered the ",(0,s.jsx)(i.strong,{children:"Signed Up"})," event, and chose your hypothetical ",(0,s.jsx)(i.code,{children:"'Enterprise'"})," plan. Properties can be anything you want to record, for example:"]}),"\n",(0,s.jsx)(i.h4,{id:"swift-4",children:"Swift"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:'Analytics.shared().track("Article Bookmarked", properties: ["title": "Snow Fall", "subtitle": "The Avalanche at Tunnel Creek", "author": "John Branch"])\n'})}),"\n",(0,s.jsx)(i.h4,{id:"objective-c-5",children:"Objective-C"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objective-c",children:'[[SEGAnalytics sharedAnalytics] track:@"Article Bookmarked"\n                            properties:@{\n                                @"title": @"Snow Fall",\n                                @"subtitle": @"The Avalanche at Tunnel Creek",\n                                @"author": @"John Branch" }];\n'})}),"\n",(0,s.jsxs)(i.p,{children:["Once you\u2019ve added a few ",(0,s.jsx)(i.code,{children:"track"})," calls, ",(0,s.jsx)(i.strong,{children:"you\u2019re set up!"})," You successfully instrumented your app. However, there are a few important things to know about for mobile app instrumentation, so read on!"]}),"\n",(0,s.jsx)(i.h2,{id:"step-5-flushing",children:"Step 5: Flushing"}),"\n",(0,s.jsxs)(i.p,{children:["By default, Intilery sends (\u201cflushes\u201d) events from the iOS library in batches of ",(0,s.jsx)(i.code,{children:"20"}),", however this is configurable. You can set the ",(0,s.jsx)(i.code,{children:"flushAt"})," value to change the batch size, or you can set it to ",(0,s.jsx)(i.code,{children:"1"})," to disable batching completely."]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Note"}),": When you disable batching, Intilery sends events as they occur. This increases battery use."]}),"\n",(0,s.jsx)(i.h4,{id:"swift-5",children:"Swift"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:'let configuration = AnalyticsConfiguration(writeKey: "YOUR_WRITE_KEY")\nconfiguration.flushAt = 1\nAnalytics.setup(with: configuration)\n'})}),"\n",(0,s.jsx)(i.h4,{id:"objective-c-6",children:"Objective-C"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objective-c",children:'SEGAnalyticsConfiguration *configuration = [SEGAnalyticsConfiguration configurationWithWriteKey:@"YOUR_WRITE_KEY"];\nconfiguration.flushAt = 1;\n[SEGAnalytics setupWithConfiguration:configuration];\n'})}),"\n",(0,s.jsxs)(i.p,{children:["You can also manually call ",(0,s.jsx)(i.code,{children:"flush"})," in your code to send all the messages in the queue:"]}),"\n",(0,s.jsx)(i.h4,{id:"swift-6",children:"Swift"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:'Analytics.shared().alias("glenncoco")\nAnalytics.shared().flush()\n'})}),"\n",(0,s.jsx)(i.h4,{id:"objective-c-7",children:"Objective-C"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-objective-c",children:'[[SEGAnalytics sharedAnalytics] alias:@"glenncoco"];\n[[SEGAnalytics sharedAnalytics] flush]\n'})}),"\n",(0,s.jsx)(i.h2,{id:"whats-next",children:"What\u2019s Next?"}),"\n",(0,s.jsxs)(i.p,{children:["We just walked through the quickest way to get started with Intilery using Analytics for iOS. You might also want to check out our full ",(0,s.jsx)(i.a,{href:"./ios",children:"Analytics for iOS reference"})," to see what else is possible, or read about the ",(0,s.jsx)(i.a,{href:"/docs/apis/api",children:"Tracking API methods"})," to get a sense for the bigger picture."]})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>c,x:()=>r});var n=t(6540);const s={},a=n.createContext(s);function c(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);