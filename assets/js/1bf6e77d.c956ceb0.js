"use strict";(self.webpackChunkintilery=self.webpackChunkintilery||[]).push([[1307],{7809:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"app/android","title":"Android Mobile SDK","description":"Analytics for Android makes it simple to send your data to Intilery.","source":"@site/docs/app/android.md","sourceDirName":"app","slug":"/app/android","permalink":"/docs/app/android","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"android","title":"Android Mobile SDK","sidebar_label":"Android Mobile SDK"},"sidebar":"app","previous":{"title":"iOS FAQs","permalink":"/docs/app/ios-faq"},"next":{"title":"Android Quickstart tutorial","permalink":"/docs/app/android-quickstart"}}');var a=t(4848),l=t(8453);const s={id:"android",title:"Android Mobile SDK",sidebar_label:"Android Mobile SDK"},r=void 0,o={},c=[{value:"Analytics-Android and Unique Identifiers",id:"analytics-android-and-unique-identifiers",level:2},{value:"API call queuing in Analytics-Android",id:"api-call-queuing-in-analytics-android",level:2},{value:"Queue persistance in Analytics-Android",id:"queue-persistance-in-analytics-android",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Step 1: Install the Library",id:"step-1-install-the-library",level:3},{value:"Step 2. Initialize the Client",id:"step-2-initialize-the-client",level:3},{value:"Java",id:"java",level:4},{value:"Kotlin",id:"kotlin",level:4},{value:"Customize the Client (Optional)",id:"customize-the-client-optional",level:3},{value:"Java",id:"java-1",level:4},{value:"Kotlin",id:"kotlin-1",level:4},{value:"Java",id:"java-2",level:4},{value:"Kotlin",id:"kotlin-2",level:4},{value:"Java",id:"java-3",level:4},{value:"Kotlin",id:"kotlin-3",level:4},{value:"Step 3. Add Permissions",id:"step-3-add-permissions",level:3},{value:"Data Collection - The Basic Intilery API calls",id:"data-collection---the-basic-intilery-api-calls",level:2},{value:"Identify",id:"identify",level:3},{value:"Java",id:"java-4",level:4},{value:"Kotlin",id:"kotlin-4",level:4},{value:"Java",id:"java-5",level:4},{value:"Kotlin",id:"kotlin-5",level:4},{value:"Track",id:"track",level:3},{value:"Java",id:"java-6",level:4},{value:"Kotlin",id:"kotlin-6",level:4},{value:"Java",id:"java-7",level:3},{value:"Kotlin",id:"kotlin-7",level:4},{value:"Screen",id:"screen",level:3},{value:"Java",id:"java-8",level:3},{value:"Kotlin",id:"kotlin-8",level:4},{value:"Automatic Screen Tracking",id:"automatic-screen-tracking",level:4},{value:"Java",id:"java-9",level:4},{value:"Kotlin",id:"kotlin-9",level:4},{value:"Context",id:"context",level:2},{value:"Java",id:"java-10",level:4},{value:"Kotlin",id:"kotlin-10",level:4},{value:"Java",id:"java-11",level:3},{value:"Kotlin",id:"kotlin-11",level:4},{value:"Java",id:"java-12",level:4},{value:"Kotlin",id:"kotlin-12",level:3},{value:"Utility methods",id:"utility-methods",level:2},{value:"Retrieve AnonymousId",id:"retrieve-anonymousid",level:3},{value:"Java",id:"java-13",level:4},{value:"Kotlin",id:"kotlin-13",level:3},{value:"Reset",id:"reset",level:3},{value:"Java",id:"java-14",level:3},{value:"Kotlin",id:"kotlin-14",level:4},{value:"Collecting Stats",id:"collecting-stats",level:3},{value:"Java",id:"java-15",level:4},{value:"Kotlin",id:"kotlin-15",level:4},{value:"Adding debug logging",id:"adding-debug-logging",level:3},{value:"Java",id:"java-16",level:4},{value:"Kotlin",id:"kotlin-16",level:4},{value:"Privacy methods",id:"privacy-methods",level:2},{value:"Opt-out",id:"opt-out",level:3},{value:"Java",id:"java-17",level:4},{value:"Kotlin",id:"kotlin-17",level:3},{value:"Anonymizing IP",id:"anonymizing-ip",level:3},{value:"Formatting Order Completed Events",id:"formatting-order-completed-events",level:2},{value:"Java",id:"java-18",level:4},{value:"Kotlin",id:"kotlin-18",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Analytics for Android makes it simple to send your data to Intilery."}),"\n",(0,a.jsxs)(n.p,{children:["All of Intilery's client sources are open-source, so you can ",(0,a.jsx)(n.a,{href:"https://github.com/Intilery/analytics-android",children:"view Analytics for Android on GitHub"})]}),"\n",(0,a.jsxs)(n.p,{children:["Want to stay updated on releases? Subscribe to the ",(0,a.jsx)(n.a,{href:"https://github.com/Intilery/analytics-android/releases.atom",children:"release feed"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Analytics for Android only supports any Android device running API 14 (Android 4.0) and higher. This includes Amazon Fire devices."}),"\n",(0,a.jsx)(n.h2,{id:"analytics-android-and-unique-identifiers",children:"Analytics-Android and Unique Identifiers"}),"\n",(0,a.jsx)(n.p,{children:"One of the most important parts of any analytics platform is the ability to consistently and accurately identify users. To do this, the platform must assign and persist some form of identification on the device, so you can analyze user actions effectively. This is especially important for funnel conversion analysis and retention analysis."}),"\n",(0,a.jsxs)(n.p,{children:["Naturally the Analytics SDK needs a unique ID for each user. The very first time an Android app that uses Intilery launches, the Intilery SDK generates a UUID and saves it on the device\u2019s disk. This is used as the ",(0,a.jsx)(n.code,{children:"anonymousId"})," and stays constant for the user on the device. To create a new user on the same device, call ",(0,a.jsx)(n.code,{children:"reset"})," on the Analytics client."]}),"\n",(0,a.jsxs)(n.p,{children:["The Intilery SDK also collects the ",(0,a.jsx)(n.a,{href:"https://developer.android.com/google/play-services/id.html",children:"Advertising ID"})," provided by Play Services. Make sure the Play Services Ads library is included as a dependency for your application. This is the ID that should be used for advertising purposes. This value is set to ",(0,a.jsx)(n.code,{children:"context.device.advertisingId"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Intilery also collects the ",(0,a.jsx)(n.a,{href:"http://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID",children:"Android ID"})," as ",(0,a.jsx)(n.code,{children:"context.device.id"}),". Some destinations rely on this field being the Android ID, so double check the destinations\u2019 vendor documentation if you choose to override the default value."]}),"\n",(0,a.jsx)(n.h2,{id:"api-call-queuing-in-analytics-android",children:"API call queuing in Analytics-Android"}),"\n",(0,a.jsx)(n.p,{children:"The Analytics-Android library queues API calls and uploads them in batches. This limits the number of network calls made, and helps save battery on the user\u2019s device."}),"\n",(0,a.jsx)(n.p,{children:"When you send an event, the library saves it to disk. When the queue size reaches the maximum size you specify (20 by default), the library flushes the queue and uploads the events in a single batch. Since the data is saved immediately, it isn\u2019t lost even if the app is killed or the operating system crashes."}),"\n",(0,a.jsx)(n.h3,{id:"queue-persistance-in-analytics-android",children:"Queue persistance in Analytics-Android"}),"\n",(0,a.jsxs)(n.p,{children:["Analytics-Android uses a persistent disk queue, so the events persist even when the app is killed. On app restart, the library reads them from disk and uploads the events. The queue works on top of ",(0,a.jsx)(n.a,{href:"http://square.github.io/tape/",children:"Tape"}),", which is designed to even survive process and system crashes."]}),"\n",(0,a.jsx)(n.p,{children:"Analytics-Android saves up to 1000 calls on disk, and these never expire."}),"\n",(0,a.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,a.jsx)(n.h3,{id:"step-1-install-the-library",children:"Step 1: Install the Library"}),"\n",(0,a.jsxs)(n.p,{children:["The easiest way to install the Analytics-Android library is using a build system like Gradle. This makes it simple to upgrade versions and add destinations. The library is distributed using ",(0,a.jsx)(n.a,{href:"http://maven.org/",children:"Maven Central"}),". Just add the ",(0,a.jsx)(n.code,{children:"analytics"})," module to your ",(0,a.jsx)(n.code,{children:"build.gradle"})," file as in the example lines below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"dependencies {\n  implementation 'com.intilery.analytics.android:analytics:1.0.0'\n  }\n"})}),"\n",(0,a.jsx)(n.h3,{id:"step-2-initialize-the-client",children:"Step 2. Initialize the Client"}),"\n",(0,a.jsxs)(n.p,{children:["We recommend initializing the client in your ",(0,a.jsx)(n.code,{children:"Application"})," subclass. You\u2019ll need your Intilery Write Key for your Android Source."]}),"\n",(0,a.jsx)(n.h4,{id:"java",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"// Create an analytics client with the given context and Intilery write key.\nAnalytics analytics = new Analytics.Builder(context, YOUR_WRITE_KEY)\n  .trackApplicationLifecycleEvents() // Enable this to record certain application events automatically!\n  .recordScreenViews() // Enable this to record screen views automatically!\n  .build();\n\n// Set the initialized instance as a globally accessible instance.\nAnalytics.setSingletonInstance(analytics);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"// Create an analytics client with the given context and Intilery write key.\nval analytics = Analytics.Builder(context, YOUR_WRITE_KEY)\n  .trackApplicationLifecycleEvents() // Enable this to record certain application events automatically!\n  .recordScreenViews() // Enable this to record screen views automatically!\n  .build()\n\n// Set the initialized instance as a globally accessible instance.\nAnalytics.setSingletonInstance(analytics);\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Notes"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["You can automatically track lifecycle events such as ",(0,a.jsx)(n.code,{children:"Application Opened"}),", ",(0,a.jsx)(n.code,{children:"Application Installed"}),", ",(0,a.jsx)(n.code,{children:"Application Updated"})," to start quickly with core events. These are optional, but highly recommended."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"customize-the-client-optional",children:"Customize the Client (Optional)"}),"\n",(0,a.jsxs)(n.p,{children:["The entry point of the library is through the ",(0,a.jsx)(n.code,{children:"Analytics"})," class. As you might have seen in the quickstart, here\u2019s how you initialize the Analytics client with it\u2019s defaults."]}),"\n",(0,a.jsx)(n.h4,{id:"java-1",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Analytics analytics = new Analytics.Builder(context, writeKey).build();\n"})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-1",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val analytics = Analytics.Builder(context, writeKey).build()\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Analytics.Builder"})," class lets you customize settings for the Analytics client, including things like the flush interval. Refer to the Javadocs for details on customizable parameters."]}),"\n",(0,a.jsx)(n.p,{children:"We also maintain a global default instance which is initialized with defaults suitable to most implementations."}),"\n",(0,a.jsx)(n.h4,{id:"java-2",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"// You can also register your custom instance as a global singleton.\nAnalytics.setSingletonInstance(analytics);\nAnalytics.with(context).track(...);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-2",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"// You can also register your custom instance as a global singleton.\nAnalytics.setSingletonInstance(analytics)\nAnalytics.with(context).track(...)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["In general, Intilery recommends that you use the Builder method because it provides the most flexibility. Remember you can call ",(0,a.jsx)(n.code,{children:"Analytics.setSingletonInstance"})," only ",(0,a.jsx)(n.em,{children:"ONCE"}),", so it\u2019s best to put the initialization code inside your custom Application class."]}),"\n",(0,a.jsx)(n.h4,{id:"java-3",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public class MyApp extends Application {\n  @Override public void onCreate() {\n    Analytics analytics = new Analytics.Builder(context, writeKey).build();\n    Analytics.setSingletonInstance(analytics);\n\n    // Safely call Analytics.with(context) from anywhere within your app!\n    Analytics.with(context).track("Application Started");\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-3",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'class MyApp : Application() {\n  override fun onCreate() {\n    val analytics = Analytics.Builder(context, writeKey).build()\n    Analytics.setSingletonInstance(analytics)\n\n    // Safely call Analytics.with(context) from anywhere within your app!\n    Analytics.with(context).track("Application Started")\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Once you initialize an Analytics client, you can safely call any of its tracking methods from any thread. These events are dispatched asynchronously to the Intilery servers."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note:"})," You should only ever initialize ",(0,a.jsx)(n.em,{children:"ONE"})," instance of the Analytics client. These are expensive to create and throw away, and in most cases, you should stick to Intilery\u2019s singleton implementation to make using the SDK easier."]}),"\n",(0,a.jsx)(n.h3,{id:"step-3-add-permissions",children:"Step 3. Add Permissions"}),"\n",(0,a.jsxs)(n.p,{children:["Ensure that the necessary permissions are declared in your application\u2019s ",(0,a.jsx)(n.code,{children:"AndroidManifest.xml"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:' \x3c!-- Required for internet. --\x3e\n<uses-permission android:name="android.permission.INTERNET"/>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"data-collection---the-basic-intilery-api-calls",children:"Data Collection - The Basic Intilery API calls"}),"\n",(0,a.jsx)(n.p,{children:"The Intilery API calls include:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#identify",children:"Identify"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#track",children:"Track"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#screen",children:"Screen"})}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"identify",children:"Identify"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Good to know"}),": For any of the different methods described in this doc, you can replace the properties and traits in the code samples with variables that represent the data collected."]}),"\n",(0,a.jsx)(n.p,{children:"Identify calls let you tie a user to their actions, and record traits about them. It includes a unique User ID and any optional traits you know about them."}),"\n",(0,a.jsxs)(n.p,{children:["Example ",(0,a.jsx)(n.code,{children:"identify"})," call:"]}),"\n",(0,a.jsx)(n.h4,{id:"java-4",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Analytics.with(context).identify("a user\'s id", new Traits().putName("John Doe"), null);\n'})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-4",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'Analytics.with(context).identify("a user\'s id", Traits().putName("John Doe"), null)\n'})}),"\n",(0,a.jsx)(n.p,{children:"Intilery recommends that you make an Identify call once when the user\u2019s first creates an account, and only using the Identify call later when their traits change. Intilery remembers the previous userIDs and merges the new traits with the old ones."}),"\n",(0,a.jsx)(n.h4,{id:"java-5",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Initially when you only know the user\'s name\nAnalytics.with(context).identify(new Traits().putName("Michael Bolton"));\n\n// Sometime later in your app when the user gives you their email\nAnalytics.with(context).identify(new Traits().putEmail("mbolton@example.com"));\n'})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-5",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'// Initially when you only know the user\'s name\nAnalytics.with(context).identify(Traits().putName("Michael Bolton"))\n\n// Sometime later in your app when the user gives you their email\nAnalytics.with(context).identify(Traits().putEmail("mbolton@example.com"))\n'})}),"\n",(0,a.jsx)(n.p,{children:"Remember, you can replace the properties and traits in the code samples with variables that represent the data you actually collected."}),"\n",(0,a.jsx)(n.p,{children:"The Identify call has the following fields:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.th,{children:[(0,a.jsx)(n.code,{children:"userId"})," ",(0,a.jsx)(n.em,{children:"String,optional"})]}),(0,a.jsx)(n.th,{children:"The database ID for this user."})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"traits"})," ",(0,a.jsx)(n.em,{children:"Traits,optional"})]}),(0,a.jsx)(n.td,{children:"A map of traits about the user, such as their name, email, address, etc."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"options"})," ",(0,a.jsx)(n.em,{children:"Options, optional"})]}),(0,a.jsx)(n.td,{children:"Extra options"})]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["The Android library currently automatically sends the ",(0,a.jsx)(n.code,{children:"userId"})," and ",(0,a.jsx)(n.code,{children:"anonymousId"})," as ",(0,a.jsx)(n.code,{children:"traits"}),". Additionally, ",(0,a.jsx)(n.code,{children:"traits"})," are sent in the ",(0,a.jsx)(n.code,{children:"context.traits"})," field with every message."]}),"\n",(0,a.jsx)(n.h3,{id:"track",children:"Track"}),"\n",(0,a.jsx)(n.p,{children:"The Track call lets you record the actions your users perform. Every action triggers what we call an \u201cevent\u201d, which can also have associated properties."}),"\n",(0,a.jsxs)(n.p,{children:["To get started, the Analytics-Android SDK can automatically tracks a few key common events using the Intilery ",(0,a.jsx)(n.a,{href:"/docs/schema/app",children:"Native Mobile Spec"}),", such as the ",(0,a.jsx)(n.code,{children:"Application Installed"}),", ",(0,a.jsx)(n.code,{children:"Application Updated"})," and ",(0,a.jsx)(n.code,{children:"Application Opened"}),". You can enable this option during initialization."]}),"\n",(0,a.jsxs)(n.p,{children:["You might also want to track events that indicate success for your mobile app, like ",(0,a.jsx)(n.strong,{children:"Signed Up"}),", ",(0,a.jsx)(n.strong,{children:"Item Purchased"})," or ",(0,a.jsx)(n.strong,{children:"Article Bookmarked"}),". Intilery recommends tracking just a few important events. You can always add more later!"]}),"\n",(0,a.jsxs)(n.p,{children:["Example ",(0,a.jsx)(n.code,{children:"track"})," call:"]}),"\n",(0,a.jsx)(n.h4,{id:"java-6",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Analytics analytics = new Analytics.Builder(context, writeKey)\n  .trackApplicationLifecycleEvents()\n  .build();\n\nAnalytics.with(context).track("Product Viewed", new Properties().putValue("name", "Moto 360"));\n'})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-6",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val analytics = Analytics.Builder(context, writeKey)\n  .trackApplicationLifecycleEvents()\n  .build()\n\nAnalytics.with(context).track("Product Viewed", Properties().putValue("name", "Moto 360"))\n'})}),"\n",(0,a.jsxs)(n.p,{children:["This example Track call tells us that your user just triggered the ",(0,a.jsx)(n.strong,{children:"Product Viewed"})," event with a name of \u201cMoto 360.\u201d"]}),"\n",(0,a.jsx)(n.p,{children:"The Track call properties can be anything you want to record, for example:"}),"\n",(0,a.jsx)(n.h3,{id:"java-7",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Analytics.with(context).track("Purchased Item", new Properties().putValue("sku", "13d31").putRevenue(199.99));\n'})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-7",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'Analytics.with(context).track("Purchased Item", Properties().putValue("sku", "13d31").putRevenue(199.99))\n'})}),"\n",(0,a.jsx)(n.p,{children:"The Track call includes the following fields:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.th,{children:[(0,a.jsx)(n.code,{children:"name"})," ",(0,a.jsx)(n.em,{children:"String,required"})]}),(0,a.jsx)(n.th,{children:"A name for the tracked action."})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"properties"})," ",(0,a.jsx)(n.em,{children:"Properties,optional"})]}),(0,a.jsx)(n.td,{children:"A map of properties for this action, e.g. revenue if the action was a purchase."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"options"})," ",(0,a.jsx)(n.em,{children:"Options,optional"})]}),(0,a.jsx)(n.td,{children:"Options"})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"screen",children:"Screen"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"/docs/schema/screen/",children:"Screen"})," method lets you you record whenever a user sees a screen of your mobile app, along with optional extra information about the page being viewed."]}),"\n",(0,a.jsx)(n.p,{children:"You\u2019ll want to record a screen event an event whenever the user opens a screen in your app. This could be a view, fragment, dialog or activity depending on your app."}),"\n",(0,a.jsx)(n.p,{children:"Not all services support screen, so when it\u2019s not supported explicitly, the screen method tracks as an event with the same parameters."}),"\n",(0,a.jsxs)(n.p,{children:["Example ",(0,a.jsx)(n.code,{children:"screen"})," call:"]}),"\n",(0,a.jsx)(n.h3,{id:"java-8",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// category "Feed" and a property "Feed Length"\nAnalytics.with(context).screen("Feed", new Properties().putValue("Feed Length", "26"));\n\n// no category, name "Photo Feed" and a property "Feed Length"\nAnalytics.with(context).screen(null, "Photo Feed", new Properties().putValue("Feed Length", "26"));\n\n// category "Smartwatches", name "Purchase Screen", and a property "sku"\nAnalytics.with(context).screen("Smartwatches", "Purchase Screen", new Properties().putValue("sku", "13d31"));\n'})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-8",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'// category "Feed" and a property "Feed Length"\nAnalytics.with(context).screen("Feed", Properties().putValue("Feed Length", "26"))\n\n// no category, name "Photo Feed" and a property "Feed Length"\nAnalytics.with(context).screen(null, "Photo Feed", Properties().putValue("Feed Length", "26"))\n\n// category "Smartwatches", name "Purchase Screen", and a property "sku"\nAnalytics.with(context).screen("Smartwatches", "Purchase Screen", Properties().putValue("sku", "13d31"))\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"screen"})," call has the following fields:"]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.th,{children:[(0,a.jsx)(n.code,{children:"category"})," ",(0,a.jsx)(n.em,{children:"String,optional"}),"*"]}),(0,a.jsx)(n.th,{children:"A category for the screen. Optional if name is provided."})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"name"})," ",(0,a.jsx)(n.em,{children:"String,optional"}),"*"]}),(0,a.jsx)(n.td,{children:"A name for the screen. Optional if category is provided."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"properties"})," ",(0,a.jsx)(n.em,{children:"Properties,optional"})]}),(0,a.jsx)(n.td,{children:"A map of properties for this screen."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:[(0,a.jsx)(n.code,{children:"options"})," ",(0,a.jsx)(n.em,{children:"Options,optional"})]}),(0,a.jsx)(n.td,{children:"Options"})]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["Find details on the Screen payload in ",(0,a.jsx)(n.a,{href:"/docs/schema/screen/",children:"the Intilery Screen call spec"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"automatic-screen-tracking",children:"Automatic Screen Tracking"}),"\n",(0,a.jsxs)(n.p,{children:["The Intilery SDK can automatically instrument screen calls, using the label of the activity you declared in the ",(0,a.jsx)(n.code,{children:"manifest"})," as the screen\u2019s name. Fragments and views do not trigger screen calls automatically, however you can manually call the Screen method for these."]}),"\n",(0,a.jsx)(n.h4,{id:"java-9",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Analytics analytics = new Analytics.Builder(context, writeKey)\n  .recordScreenViews()\n  .build();\n"})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-9",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val analytics = Analytics.Builder(context, writeKey)\n  .recordScreenViews()\n  .build()\n"})}),"\n",(0,a.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,a.jsxs)(n.p,{children:["Context is a dictionary of extra information you can provide about a specific API call. You can add any custom data to the context dictionary that you want to have access to in the raw logs. Some keys in the context dictionary ",(0,a.jsx)(n.a,{href:"/docs/schema/common#context",children:"have semantic meaning and are collected for you automatically"}),", such as information about the user\u2019s device."]}),"\n",(0,a.jsx)(n.h4,{id:"java-10",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"AnalyticsContext analyticsContext = Analytics.with(context).getAnalyticsContext();\nanalyticsContext.putValue(...).putReferrer(...).putCampaign(...);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-10",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val analyticsContext = Analytics.with(context).analyticsContext\nanalyticsContext.putValue(...).putReferrer(...).putCampaign(...)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["You can read more about these special fields in the ",(0,a.jsx)(n.a,{href:"/docs/schema/common#context",children:"Intilery Common spec documentation"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"To alter data specific to the device object you can use the following:"}),"\n",(0,a.jsx)(n.h3,{id:"java-11",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'AnalyticsContext analyticsContext = Analytics.with(context).getAnalyticsContext();\nanalyticsContext.device().putValue("advertisingId", "1");\n'})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-11",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val analyticsContext = Analytics.with(context).analyticsContext\nanalyticsContext.device().putValue("advertisingId", "1")\n'})}),"\n",(0,a.jsxs)(n.p,{children:["To opt out of automatic data collection, clear the context after initializing the client. Do this ",(0,a.jsx)(n.em,{children:"BEFORE"})," you send any events."]}),"\n",(0,a.jsx)(n.h4,{id:"java-12",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Analytics analytics = new Analytics.Builder(context, writeKey).defaultOptions(defaultOptions).build();\nAnalyticsContext context = getAnalyticsContext();\ncontext.clear();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"kotlin-12",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val analytics = Analytics.Builder(context, writeKey).defaultOptions(defaultOptions).build()\nval context = analytics.analyticsContext\ncontext.clear()\n"})}),"\n",(0,a.jsx)(n.h2,{id:"utility-methods",children:"Utility methods"}),"\n",(0,a.jsx)(n.h3,{id:"retrieve-anonymousid",children:"Retrieve AnonymousId"}),"\n",(0,a.jsxs)(n.p,{children:["You can retrieve the ",(0,a.jsx)(n.code,{children:"anonymousId"})," set by the library by using:"]}),"\n",(0,a.jsx)(n.h4,{id:"java-13",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Analytics.with(context).getAnalyticsContext().traits().anonymousId();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"kotlin-13",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"Analytics.with(context).analyticsContext().traits().anonymousId()\n"})}),"\n",(0,a.jsx)(n.h3,{id:"reset",children:"Reset"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"reset"})," method clears the SDK\u2019s internal stores for the current user and group. This is useful for apps where users log in and out with different identities on the same device over time."]}),"\n",(0,a.jsx)(n.p,{children:"The example code below clears all information about the user."}),"\n",(0,a.jsx)(n.h3,{id:"java-14",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Analytics.with(context).reset();\n"})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-14",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"Analytics.with(context).reset()\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Reset does not clear events in the queue"}),", and any remaining events in the queue are sent the next time the app starts. You might want to call Flush before you call Reset."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note"}),": When you call ",(0,a.jsx)(n.code,{children:"reset"}),", the next time the app opens Intilery generates a new AnonymousId. This can impact the number of Monthly Tracked Users (MTUs) you process."]}),"\n",(0,a.jsx)(n.h3,{id:"collecting-stats",children:"Collecting Stats"}),"\n",(0,a.jsx)(n.p,{children:"Local device stats help you quickly see how many events you sent to Intilery, the average time bundled destinations took to run, and similar metrics."}),"\n",(0,a.jsx)(n.h4,{id:"java-15",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"StatsSnapshot snapshot = Analytics.with(context).getSnapshot();\nlog(snapshot.integrationOperationAverageDuration);\nlog(snapshot.flushCount);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-15",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val snapshot = Analytics.with(context).snapshot()\nlog(snapshot.integrationOperationAverageDuration)\nlog(snapshot.flushCount)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"adding-debug-logging",children:"Adding debug logging"}),"\n",(0,a.jsx)(n.p,{children:"If you run into issues while using the Android library, you can enable logging to help trace the issue. Logging also helps you see how long destinations take to complete their calls so you can find performance bottlenecks."}),"\n",(0,a.jsxs)(n.p,{children:["The logging is enabled by default in the default singleton instance if your application is running in ",(0,a.jsx)(n.code,{children:"debug"})," mode. If you use a custom instance, attach a ",(0,a.jsx)(n.code,{children:"LogLevel"})," to the ",(0,a.jsx)(n.code,{children:"Builder"})," and set the logging level there, as in the example below."]}),"\n",(0,a.jsx)(n.h4,{id:"java-16",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Analytics analytics = new Analytics.Builder(context, writeKey).logLevel(LogLevel.VERBOSE)...build();\n"})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-16",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"val analytics = Analytics.Builder(context, writeKey).logLevel(LogLevel.VERBOSE)...build()\n"})}),"\n",(0,a.jsxs)(n.p,{children:["You can choose to disable logging completely (",(0,a.jsx)(n.code,{children:"LogLevel.NONE"}),"), enable basic logging for the SDK (",(0,a.jsx)(n.code,{children:"LogLevel.BASIC"}),"), enable basic logging for Device-mode destination (",(0,a.jsx)(n.code,{children:"LogLevel.INFO"}),"), or simply log everything (",(0,a.jsx)(n.code,{children:"LogLevel.VERBOSE"}),")."]}),"\n",(0,a.jsxs)(n.p,{children:["Intilery recommends that you turn logging off in ",(0,a.jsx)(n.em,{children:"production"})," modes of your app."]}),"\n",(0,a.jsx)(n.h2,{id:"privacy-methods",children:"Privacy methods"}),"\n",(0,a.jsx)(n.h3,{id:"opt-out",children:"Opt-out"}),"\n",(0,a.jsx)(n.p,{children:"Depending on the audience for your app (for example, children) or the countries where you sell your app (for example, the EU), you may need to offer the ability for users to opt-out of analytics data collection inside your app. You can turn off ALL destinations including Intilery itself:"}),"\n",(0,a.jsx)(n.h4,{id:"java-17",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Analytics.with(this).optOut(true);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"kotlin-17",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"Analytics.with(this).optOut(true)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Set the opt-out status for the current device and analytics client combination. This flag persists across device reboots, so you can call it once in your application, such as in a screen where a user can opt out of analytics tracking."}),"\n",(0,a.jsx)(n.h3,{id:"anonymizing-ip",children:"Anonymizing IP"}),"\n",(0,a.jsx)(n.p,{children:"The Intilery iOS, Android, Analytics.js and Xamarin libraries automatically derive and set the IP address for events recorded on the user\u2019s device. The IP is not collected on the device itself, but instead is filled in by Intilery\u2019s servers when they receive a message."}),"\n",(0,a.jsxs)(n.p,{children:["To prevent Intilery from recording the users\u2019 IP in destinations and S3, you can set the event\u2019s ",(0,a.jsx)(n.code,{children:"context.ip"})," field to ",(0,a.jsx)(n.code,{children:"0.0.0.0"}),". The Intilery servers won\u2019t overwrite this data if it comes from the client, and so do not record the IP address of the client."]}),"\n",(0,a.jsx)(n.h2,{id:"formatting-order-completed-events",children:"Formatting Order Completed Events"}),"\n",(0,a.jsxs)(n.p,{children:["Intilery\u2019s Android library provides several helper methods so you can easily construct both properties objects and products lists so your Order Completed events conform to the Intilery ",(0,a.jsx)(n.a,{href:"/docs/schema/retail",children:"ecommerce specification"}),". Here\u2019s a code example:"]}),"\n",(0,a.jsx)(n.h4,{id:"java-18",children:"Java"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'import com.segment.analytics.Analytics;\nimport com.segment.analytics.Properties;\nimport com.segment.analytics.Properties.Product;\n\n// initialize a new properties object\nProperties properties = new Properties();\n\n// add orderId and revenue to the properties object\nproperties.putValue("orderId", String orderId).putValue("revenue", double revenue);\n\n// initialize a new product\nProduct product1 = new Product(String id, String sku, double price);\n\n// initialize a second product\nProduct product2 = new Product(String id, String sku, double price);\n\n// add products to the properties object\nproperties.putProducts(product1, product2);\n\n// pass the properties object into your Order Completed event\nAnalytics.with(context).track("Order Completed", properties);\n'})}),"\n",(0,a.jsx)(n.h4,{id:"kotlin-18",children:"Kotlin"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'import com.segment.analytics.Analytics\nimport com.segment.analytics.Properties\nimport com.segment.analytics.Properties.Product\n\n// initialize a new properties object\nval properties = Properties();\n\n// add orderId and revenue to the properties object\nproperties.putValue("orderId", orderId).putValue("revenue", revenue)\n\n// initialize a new product\nProduct product1 = Product(id, sku, price)\n\n// initialize a second product\nProduct product2 = Product(id, sku, price)\n\n// add products to the properties object\nproperties.putProducts(product1, product2)\n\n// pass the properties object into your Order Completed event\nAnalytics.with(context).track("Order Completed", properties)\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Find details on ",(0,a.jsx)(n.strong,{children:"best practices in event naming"})," as well as the ",(0,a.jsx)(n.strong,{children:"Track method payload"})," in the ",(0,a.jsx)(n.a,{href:"/docs/schema/track",children:"Intilery Track call spec"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const a={},l=i.createContext(a);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);