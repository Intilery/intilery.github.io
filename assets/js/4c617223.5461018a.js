"use strict";(self.webpackChunkintilery=self.webpackChunkintilery||[]).push([[6565],{5998:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"app/push","title":"Push Notifications","description":"We use Google Firebase as the messaging channel","source":"@site/docs/app/push.md","sourceDirName":"app","slug":"/app/push","permalink":"/docs/app/push","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"app","previous":{"title":"API For Mobile","permalink":"/docs/app/api"},"next":{"title":"iOS Mobile SDK","permalink":"/docs/app/ios"}}');var t=s(4848),o=s(8453);const r={},d="Push Notifications",c={},h=[{value:"Managing the FCM Token on the Device",id:"managing-the-fcm-token-on-the-device",level:2},{value:"Sending the FCM Token to Intilery",id:"sending-the-fcm-token-to-intilery",level:2},{value:"Register Push Event",id:"register-push-event",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"push-notifications",children:"Push Notifications"})}),"\n",(0,t.jsxs)(n.p,{children:["We use ",(0,t.jsx)(n.a,{href:"https://firebase.google.com",children:"Google Firebase"})," as the messaging channel\nto make it easier to integrate push across multiple mobile platforms."]}),"\n",(0,t.jsxs)(n.p,{children:["You will need to register your app(s) with ",(0,t.jsx)(n.a,{href:"https://console.firebase.google.com/",children:"Firebase"})]}),"\n",(0,t.jsx)(n.p,{children:"In order to send messages from Intilery to your app you should:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["register your app with ",(0,t.jsx)(n.a,{href:"https://console.firebase.google.com/",children:"Firebase"})]}),"\n",(0,t.jsxs)(n.li,{children:["add the Cloud Messaging Client to your app:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://firebase.google.com/docs/cloud-messaging/ios/client",children:"iOS"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://firebase.google.com/docs/cloud-messaging/android/client",children:"Android"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You then supply\n",(0,t.jsx)(n.a,{href:"https://firebase.google.com/docs/admin/setup#initialize-sdk",children:"Intilery with the JSON FCM key"}),"\nto enable push notifications to be sent."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"A customer can have more than one device, but the device is only every linked to\none customer. If a customer has more than one device, when a push campaign is\nscheduled it is sent to all the customer's devices."})}),"\n",(0,t.jsx)(n.h2,{id:"managing-the-fcm-token-on-the-device",children:"Managing the FCM Token on the Device"}),"\n",(0,t.jsxs)(n.p,{children:["To ensure that your app audience is up-to-date you need to make sure your ",(0,t.jsx)(n.a,{href:"https://firebase.google.com/docs/cloud-messaging/manage-tokens#ensuring-registration-token-freshness",children:"FCM\ntoken is refreshed regularly"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Intilery will remove stale tokens that are more than 2 months old.\nYou should configure your app to refresh the FCM token once every 30 - 45 days."}),"\n",(0,t.jsx)(n.p,{children:"When we attempt to send a push message, if we get an error back from firebase\nindicating that the token is no longer valid, the token will be removed by Intilery."}),"\n",(0,t.jsx)(n.h2,{id:"sending-the-fcm-token-to-intilery",children:"Sending the FCM Token to Intilery"}),"\n",(0,t.jsx)(n.p,{children:"When a user first installs the app, you can ask them to accept push messages."}),"\n",(0,t.jsxs)(n.p,{children:["If the user accepts, send a ",(0,t.jsx)(n.code,{children:"Register Push"})," event to Intilery. As the customer is\nnot signed in at this point, there will be no ",(0,t.jsx)(n.code,{children:"userId"}),", so use the FCM generated\n",(0,t.jsx)(n.code,{children:"deviceId"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Continue to use the FCM Device ID as the ",(0,t.jsx)(n.code,{children:"userId"})," in subsequent events."]}),"\n",(0,t.jsxs)(n.p,{children:["When a user does ",(0,t.jsx)(n.strong,{children:"not enable push"}),", they are anonymous, so send\nevents to Intilery with only an ",(0,t.jsx)(n.code,{children:"anonymousId"}),". You can use the FCM Device ID as\nthe ",(0,t.jsx)(n.code,{children:"anonymousId"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When a customer Signs In or Registers, send an ",(0,t.jsx)(n.code,{children:"Identify"})," as you normally would\nto identify the customer, then if push is enabled send a ",(0,t.jsx)(n.code,{children:"Register Push"})," with the\n",(0,t.jsx)(n.code,{children:"userId"})," matching your unique user identifier."]}),"\n",(0,t.jsx)(n.h3,{id:"register-push-event",children:"Register Push Event"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Register Push"})," event has these properties:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"deviceId"})," from firebase to uniquely identify the device"]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"fcmToken"})," from firebase enabling push notifications"]}),"\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.code,{children:"deviceType"})," of ",(0,t.jsx)(n.code,{children:"iOS"})," or ",(0,t.jsx)(n.code,{children:"Android"})," or ",(0,t.jsx)(n.code,{children:"Web"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["If the user has signed in or registered, the ",(0,t.jsx)(n.code,{children:"userId"})," will be your unique customer\nidentifier. If they haven't, but have push enabled, then use the ",(0,t.jsx)(n.code,{children:"deviceId"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n   "userId": "<deviceId|userId>",\n   "event": "register push",\n   "type": "track",\n   "properties": {\n      "deviceId":"<deviceId>",\n      "fcmToken":"<fcmToken>",\n      "deviceType":"iOS|Android|Web"\n   },\n   "writeKey": "<writeKey>"\n}\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var i=s(6540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);